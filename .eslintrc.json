{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "tsconfigRootDir": "./"
  },
  "extends": ["plugin:@typescript-eslint/recommended", "standard", "standard-react"],
  "plugins": [
    "@typescript-eslint" // Let's us override rules below.
  ],
  "rules": {
    "node/no-unsupported-features/es-syntax": "off", // Allows us to use Import and Export keywords.,
    "no-useless-constructor": "off",
    "no-var": "error",
    "@typescript-eslint/no-useless-constructor": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": 1,
    "@typescript-eslint/no-inferrable-types": [
      "warn", {
        "ignoreParameters": true
      }
    ],
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/member-delimiter-style": ["error", { // Prevents us from using any delimiter for interface properties.
      "multiline": {
        "delimiter": "none",
        "requireLast": false
      },
      "singleline": {
        "delimiter": "comma",
        "requireLast": false
      }
    }],
    "@typescript-eslint/indent": "off", // This is the job of StandardJS, they are competing rules so we turn off the Typescript one.
    "@typescript-eslint/no-empty-function": [ "error",
      {
        "allow": [
          "setters",
          "getters"
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
